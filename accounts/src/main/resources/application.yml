server:
  port: 8080
spring:
  application:
    name: "accounts"
  profiles:
    active: "prod"
  config:
    import: "optional:configserver:http://localhost:8071/"
  datasource:
    url: jdbc:h2:mem:accountsdb
    driverClassName: org.h2.Driver
    username: sa
    password: ''
  h2:
    console:
      enabled: true
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: update
    show-sql: true
  cloud:
    openfeign:
      circuitbreaker:
        enabled: true

management:
  endpoints:
    web:
      exposure:
        include: "*"
  info:
    env:
      enabled: true
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  endpoint:
    shutdown:
      enabled: true # Enable an actuator endpoint to manually shutdown the service (for testing)
    health:
      probes:
        enabled: true
  # tags for metrics in Prometheus
  metrics:
    tags:
     application: ${spring.application.name}

eureka:
  instance:
    preferIpAddress: true # When DNS names are not available
  client:
    fetchRegistry: true # Default
    registerWithEureka: true # Default
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/ # Eureka server URL

# Details about the app for Eureka server
info:
  app:
    name: accounts
    description: Demo bank accounts service
    version: 0.8.0

endpoints:
  shutdown:
    enabled: true

logging:
  level:
    com:
      demo:
        bank:
          accounts: DEBUG
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"

resilience4j.circuitbreaker:
  configs:
    default:
      slidingWindowSize: 10
      permittedNumberOfCallsInHalfOpenState: 2
      failureRateThreshold: 50
      waitDurationInOpenState: 10000

resilience4j.retry:
  configs:
    getBuildInfo:
      maxAttempts: 3
      waitDuration: 500
      enableExponentialBackoff: true
      exponentialBackoffMultiplier: 2
      ignoreExceptions:
        - java.lang.NullPointerException
      retryExceptions:
        - java.util.concurrent.TimeoutException

resilience4j.ratelimiter:
  configs:
    default:
      timeoutDuration: 1000
      limitRefreshPeriod: 5000
      limitForPeriod: 1